@import "../Utils/variables";
@import "../Utils/mixins";

// Styles the grid containers for this webpage. It changes the display to CSS grid to allow for better 
// responsiveness, sets the width to be 80% of the page to allow for more white space to make sure the
// user isn't overwhelmed by an excessive amount of content. It allows the grid rows and columns to be mostly 
// flexible in terms of their sizing and also creates a thin accent border at the bottom of the cards.
.gridContainerMenu {
    @include display_grid;

    grid-gap: 10px;
    background-color: white;
    padding: 30px;
    width: 80%;
    margin: 0 auto 0 auto;
    border-bottom: 5px solid $accent-colour;
}

// These following stylings allow for accurate positioning for the content and images in the grid containers.
.menuItem1 {
    grid-column: 1 / span 1;
    grid-row: 1 / span 3;
}

.menuItem2 {
    height: $standard-height;
    width: $standard-width;

    grid-column: 2 / span 1;
    grid-row: 2 / span 1;
}

#menuItem3 {
    height: $standard-height;
    width: $standard-width;

    grid-column: 1 / span 1;
    grid-row: 2 / span 1;
}

#menuItem4 {
    grid-column: 2 / span 1;
    grid-row: 1 / span 3;
}

// Styles header components to shrink to adapt for screen sizes under 600px
@media screen and (max-width: 600px) {
    .menuItem1 {
        grid-column: 1 / span 3;
        grid-row: 2 / span 1;
    }
    
    .menuItem2 {
        height: $standard-height;
        width: $standard-width;
    
        grid-column: 2 / span 1;
        grid-row: 1 / span 1;
    }
    
    #menuItem3 {
        height: $standard-height;
        width: $standard-width;
    
        grid-column: 2 / span 1;
        grid-row: 1 / span 1;
    }
    
    #menuItem4 {
        grid-column: 1 / span 3;
        grid-row: 2 / span 1;
    }
}